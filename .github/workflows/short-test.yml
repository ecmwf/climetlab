# (C) Copyright 2021 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.
#

name: Short tests

on:
  push: {}

  workflow_dispatch: {}

  pull_request: {}

jobs:
  quality:
    name: Code QA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: pip install black flake8 isort
      - run: black --version
      - run: isort --version
      - run: flake8 --version
      - run: isort --check .
      - run: black --check .
      - run: flake8 .

  test_build_doc:
    name: Test building documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install packages needed to build the documentation
        run: |
          pip install sphinx
          pip install -r docs/requirements.txt
          sudo apt-get install pandoc
          pip freeze

      - name: Documentation
        run: |
          make clean
          make html
          # make linkcheck (don't run yet)
        working-directory: docs

  checks:
    strategy:
      fail-fast: false
      matrix:
        platform: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        exclude:
          - platform: "windows-latest"
            python-version: "3.7"

    name: Python  ${{ matrix.python-version }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Tokens
        shell: python
        env:
          ECMWFAPIRC: ${{ secrets.ECMWFAPIRC }}
          CDSAPIRC: ${{ secrets.CDSAPIRC }}

        run: |
          import os
          for n in ('ECMWFAPIRC', 'CDSAPIRC'):
              m = os.path.expanduser("~/." + n.lower())
              if os.environ[n]:
                  with open(m, "w") as f:
                      print(os.environ[n], file=f)

      - name: Install climetlab
        run: |
          pip install -e .
          pip freeze

      - name: climetlab df
        run: |
          df .
          climetlab df .

      - run: climetlab versions

      - run: climetlab libraries

      - name: Install test tools
        run: |
          pip install pytest pytest-cov
          pip freeze

      - name: Run short tests
        run: |
          # -E flag is defined in conftest.py
          pytest --durations=10 -vv -E short
